from sbox import Sbox

if __name__ == "__main__":

	cipher = "linear_SBox"
	# sbox = [0xC, 0x5, 0x6, 0xB, 0x9, 0x0, 0xA, 0xD, 0x3, 0xE, 0xF, 0x8, 0x4, 0x7, 0x1, 0x2]		#present_cipher
	# sbox = [0xc, 0xd, 0xb, 0x9, 0x6, 0x0, 0x5, 0xa, 0x3, 0x2, 0x8, 0x4, 0xf, 0x7, 0xe, 0x1]
	sbox = [0x1, 0xa, 0x4, 0xc, 0x6, 0xf, 0x3, 0x9, 0x2, 0xd, 0xb, 0x7, 0x5, 0x0, 0x8, 0xe]		#gift_cipher
	# sbox = [0xc, 0xb, 0xe, 0xf, 0x1, 0x7, 0xd, 0x9, 0xa, 0x0, 0x2, 0x4, 0x3, 0x8, 0x5, 0x6]		#linear SBox
	# sbox = [0x6, 0x4, 0xc, 0x5, 0x0, 0x7, 0x2, 0xe, 0x1, 0xf, 0x3, 0xd, 0x8, 0xa, 0x9, 0xb]		#sypher001

	# sbox = [0, 14, 27, 17, 22, 24, 15, 5, 30, 25, 7, 4, 11, 12, 16, 19, 3, 9, 8, 6, 21, 31, 28, 18, 20, 23, 29, 26, 1, 2, 10, 13]
	# sbox = [0x0, 0x3a, 0x2f, 0x1c, 0x3, 0x1d, 0x18, 0xf, 0x17, 0x35, 0x20, 0xb, 0x2e, 0x28, 0x2d, 0x22, 0x3d, 0x23, 0x3e, 0x29, 0x10, 0x2a, 0x27, 0x14, 0x1, 0x7, 0x1a, 0x15, 0x16, 0x34, 0x39, 0x12, 0x1e, 0x36, 0x11, 0x30, 0x9, 0x5, 0x32, 0x37, 0x8, 0x38, 0x1f, 0x26, 0x25, 0x31, 0x6, 0x1b, 0x2, 0xe, 0x21, 0x24, 0x3b, 0x13, 0x2c, 0xd, 0x3f, 0x2b, 0x4, 0x19, 0x3c, 0xc, 0x33, 0xa]								# 6-bit SB

	# sbox = [1, 3, 6, 5, 2, 4, 7, 0]

	# prop = 0b1110
	sb = Sbox(sbox)
	
	sb.CreateDivisionTrails()
	# prop_list = [0b01111, 0b10111, 0b11011, 0b11101, 0b11110]
	# for prop in prop_list:
	# 	sb.divisionTrail(prop)
	# 	print(100*"-"+"\n\n")

